# Compilers
singlepass::spec::multi_value
singlepass::spec::simd

## SIMD in Cranelift 0.67 has a small bug
cranelift::spec::simd::simd_f64x2_arith

singlepass on windows # Singlepass is not yet supported on Windows

# TODO: We need to fix this. The issue happens only in Cranelift/LLVM and macOS,
# is caused by libunwind overflowing the stack while creating the stacktrace.
# https://github.com/rust-lang/backtrace-rs/issues/356
cranelift::spec::skip_stack_guard_page on darwin
llvm::spec::skip_stack_guard_page on darwin

# TODO(https://github.com/wasmerio/wasmer/issues/1727): Traps in native engine
cranelift::spec::linking on native

# https://github.com/wasmerio/wasmer/issues/1722
llvm::spec::skip_stack_guard_page on native

# Cranelift on arm failures
cranelift::spec::align on aarch64
cranelift::spec::memory_trap on aarch64
cranelift::spec::simd::simd_bit_shift on aarch64
cranelift::spec::simd::simd_boolean on aarch64
cranelift::spec::simd::simd_const on aarch64
cranelift::spec::simd::simd_i16x8_arith on aarch64
cranelift::spec::simd::simd_i16x8_sat_arith on aarch64
cranelift::spec::simd::simd_i32x4_arith on aarch64
cranelift::spec::simd::simd_i64x2_arith on aarch64
cranelift::spec::simd::simd_i8x16_arith on aarch64
cranelift::spec::simd::simd_i8x16_sat_arith on aarch64
cranelift::spec::simd::simd_lane on aarch64
cranelift::spec::skip_stack_guard_page on aarch64

# SIMD changes
# due to breaking changes in the SIMD proposal, we have to disable these spec tests
# note we've not pulled in the updated spec tests yet, so expect more breakage

cranelift::spec::simd::simd_boolean
cranelift::spec::simd::simd_lane
llvm::spec::simd::simd_boolean
llvm::spec::simd::simd_lane

# Frontends

## WASI

### due to hard-coded direct calls into WASI for wasi unstable

wasitests::snapshot1::fd_read
wasitests::snapshot1::poll_oneoff
wasitests::snapshot1::fd_pread
wasitests::snapshot1::fd_close
wasitests::snapshot1::fd_allocate
wasitests::snapshot1::close_preopen_fd
wasitests::snapshot1::envvar

### TODO: resolve the disabled tests below. These are newly disabled tests from the migration:

### due to git clone not preserving symlinks:
wasitests::snapshot1::readlink
wasitests::unstable::readlink

### failing due to `remove_dir_all`. this test is also bad for parallelism
wasitests::snapshot1::create_dir
wasitests::unstable::create_dir

### failing because it closes `stdout` which breaks our testing system
wasitests::unstable::fd_close

### failing because we're operating on stdout which is now overridden.
### TODO: check WasiFile implementation
### Alterative: split test into 2 parts, one printing to stderr, the other printing to stdout to test the real versions
wasitests::unstable::poll_oneoff

## Failing due to different line endings on Windows
## we need a better solution to this problem:

wasitests::snapshot1::file_metadata on windows
wasitests::snapshot1::fseek on windows
wasitests::snapshot1::path_link on windows
wasitests::snapshot1::path_symlink on windows
wasitests::snapshot1::mapdir_with_leading_slash on windows
wasitests::unstable::fd_pread on windows
wasitests::unstable::fd_read on windows
wasitests::unstable::file_metadata on windows
wasitests::unstable::fseek on windows
wasitests::unstable::path_link on windows
wasitests::unstable::path_symlink on windows
wasitests::unstable::mapdir_with_leading_slash on windows

# This test is meant to only run on Unix
wasitests::unstable::unix_open_special_files on windows
wasitests::snapshot1::unix_open_special_files on windows
